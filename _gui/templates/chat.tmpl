<html>

<head>
  <title>murcott</title>
  <link href='/css/style.css' rel='stylesheet' type='text/css'>
  <link href='//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css' rel='stylesheet' type='text/css'>
</head>

<body>
  <script src='//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js'></script>
  <script src='//cdnjs.cloudflare.com/ajax/libs/sugar/1.4.1/sugar.min.js'></script>
  <script>
    $(function() {
      var subscribers = {};
      var queue = {};

      window.publish = function(key, data) {
        var ary = subscribers[key];
        if (Array.isArray(ary)) {
          for (var i = 0; i < ary.length; i++) {
            var c = ary[i];
            if (typeof c == 'function') {
              c(data);
            }
          }
        }
        if (!Array.isArray(queue[key])) {
          queue[key] = [];
        }
        queue[key].push(data);
      }

      window.subscribe = function(key, callback) {
        if (!Array.isArray(subscribers[key])) {
          subscribers[key] = new Array();
        }
        if (Array.isArray(queue[key])) {
          var ary = queue[key];
          for (var i = 0; i < ary.length; i++) {
            callback(ary[i]);
          }
        }
        subscribers[key].push(callback);
      }
    });

    $(function() {
      var funcid = 0;
      var func = [];

      var info = JSON.parse('{{.}}');

      (function(info) {
        var log = {};
        try {
          log = JSON.parse(localStorage["chatlog_" + info.id]);
        } catch (e) {
          console.log(e)
        }
        window.recordChatlog = function(id, from, msg, date) {
          if (!Array.isArray(log[id])) {
            log[id] = [];
          }
          log[id].push({
            id: id,
            from: from,
            msg: msg,
            date: date.toJSON()
          });
          localStorage["chatlog_" + info.id] = JSON.stringify(log);
        }
        window.loadRecordedLog = function(id) {
          if (Array.isArray(log[id])) {
            var ary = [];
            for (var i = 0; i < log[id].length; i++) {
              var l = log[id][i];
              l.date = Date.create(l.date);
              ary.push(l);
            }
            ary.sortBy(function(n) {
              return n.date.getTime();
            });
            return ary;
          } else {
            return [];
          }
        }
        window.clearRecordedLog = function(id) {
          log[id] = [];
          localStorage["chatlog_" + info.id] = JSON.stringify(log);
        }
      })(info);

      var sock = new WebSocket('ws://' + location.host + '/ws/' + info.key);
      sock.onopen = function() {
        sock.onmessage = function(res) {
          var data = JSON.parse(res.data);
          var c = func[data["id"]];
          if (typeof c == 'function') {
            c.apply(null, data["result"]);
          }
        };

        invoke("HandleLog", function(log) {
          if (log.indexOf('[ERROR]') === 0) {
            console.warn('%c' + log, 'color:red');
          } else {
            console.log(log);
          }
        });

        invoke("HandleMessage", function(src, msg) {
          addChatLog(src, src, msg, Date.create());
          recordChatlog(src, src, msg, Date.create());
        });

        invoke("HandleStatus", function(src, type) {
          publish('status_' + src, type);
        });

        updateSelfProfile();
        invoke("SetStatus", "active");

        invoke("GetRoster", function(r) {
          for (var i = 0; i < r.length; i++) {
            if (r[i] != info.id) {
              addChatPage(r[i]);
            }
          }
        });
      };

      function updateSelfProfile() {
        invoke("GetProfile", function(id, nickname, avatar) {
          publish('nickname_' + id, nickname);
          publish('avatar_' + id, avatar);
        });
      }

      function updateFriendProfile(id) {
        invoke("GetFriendProfile", id, function(nickname, avatar) {
          publish('nickname_' + id, nickname);
          publish('avatar_' + id, avatar);
        });
      }

      subscribe('nickname_' + info.id, function(nickname) {
        $('#settings input[name=nickname]').val(nickname);
      });

      subscribe('avatar_' + info.id, function(avatar) {
        $("li.item a[page=settings]")
          .css('background-image', 'url(data:image/gif;base64,' + avatar + ')');
        if (avatar.length > 0) {
          $('.my-avatar')
            .attr('src', 'data:image/png;base64,' + avatar)
            .data('src', 'data:image/png;base64,' + avatar);
        }
      });

      function invoke() {
        var args = Array.prototype.slice.call(arguments);
        args.shift();
        if (arguments.length > 0) {
          for (i = 0; i < args.length; i++) {
            if (typeof args[i] == 'function') {
              func[funcid] = args[i];
              args[i] = funcid;
              funcid++;
            }
          }
          var c = {
            "jsonrpc": "2.0",
            "method": arguments[0],
            "params": args,
            "id": 0
          }
          sock.send(JSON.stringify(c));
        }
      }

      function activatePage(page) {
        $('div.page').hide();
        $('li.item a').removeClass('active');
        $('div.page[page=' + page + ']').show();
        $('li.item a[page=' + page + ']').addClass('active');
        setTimeout(function() {
          $(document).scrollTop(9999999);
        }, 10);
        location.hash = page;
      }

      $(document).on("click", "li.item a[page]", function() {
        activatePage($(this).attr('page'));
      });

      function addChatLog(id, from, msg, date) {
        var $chatlog = $('div.page[page=' + id + '] ul.chatlog');
        var lastid = $chatlog.find('h4:last').data('id');

        if (lastid != from) {
          var $image = $('<img>').attr('width', '32').attr('height', '32');
          var $from = $('<h4>').append($image).append(from).data('id', from);

          subscribe('nickname_' + from, function(nickname) {
            $from.empty().append($image).append(nickname.escapeHTML());
          });

          subscribe('avatar_' + from, function(avatar) {
            if (avatar.length > 0) {
              $image.attr('src', 'data:image/png;base64,' + avatar);
            }
          });

          $chatlog.append($('<li>').append($from));
        }

        var $date = $('<span>').addClass('date').append(date.format('{12hr}:{mm}{tt}')).data('date', date);
        $li = $('<li>').append($date);
        msg = msg.replace(/\[img\](.+)\[\/img\]/g, function(str, data) {
          $li.append($('<img>').attr('src', data));
          return '';
        });
        $chatlog.append($li.append(msg.escapeHTML()));
        $(document).scrollTop(9999999);
      }

      function addChatPage(id) {
        var $nick = $('<a>')
          .addClass('nickname')
          .attr('user-id', id)
          .append(id);

        var $li = $('<li>')
          .addClass('item')
          .append(
            $('<a>')
            .attr('href', 'javascript:void(0)')
            .attr('page', id)
            .append($nick)
            .css('border-left', '5px solid transparent')
          );

        $('#add-friend').before($li);

        subscribe('nickname_' + id, function(nickname) {
          $nick.empty().append(nickname.escapeHTML());
        });
        subscribe('avatar_' + id, function(avatar) {
          $li.children('a').css('background-image', 'url(data:image/gif;base64,' + avatar + ')');
        });
        subscribe('status_' + id, function(status) {
          var color = (status == 'active') ? '#73d529' : 'transparent';
          $li.children('a').css('border-left', '5px solid ' + color);
        });

        var $input = $('<input>')
          .attr('id', 'chat-input')
          .attr('type', 'text');

        var $file = $('<input>')
          .attr('type', 'file')
          .css('position', 'fixed')
          .css('opacity', '0');

        var $addimage = $('<a>')
          .addClass('add-image')
          .attr('href', 'javascript:void(0)')
          .append('<i class="fa fa-camera"></i>');

        $addimage.click(function() {
          $file.trigger('click');
          return false;
        });

        $file.change(function(e) {
          var files = e.target.files;
          for (var i = 0, f; f = files[i]; i++) {
            if (f.type.match('image.*')) {
              var reader = new FileReader();
              reader.onload = (function(theFile) {
                return function(e) {
                  var data = e.target.result;
                  var msg = '[img]' + data + '[/img]';
                  invoke('SendMessage', id, msg, function(ok) {});
                  addChatLog(id, info.id, msg, Date.create());
                  recordChatlog(id, info.id, msg, Date.create());
                };
              })(f);

              reader.readAsDataURL(f);
            }
          }
        });

        $input.keypress(function(e) {
          if (e.keyCode == 13 && !e.shiftKey) {
            var val = $(this).val();
            if (val.length > 0) {
              $(this).val("");
              invoke('SendMessage', id, val, function(ok) {});
              addChatLog(id, info.id, val, Date.create());
              recordChatlog(id, info.id, val, Date.create());
            }
            return false;
          }
        });

        var $nickname = $('<a>')
          .addClass('nickname')
          .attr('user-id', id)
          .append(id);

        subscribe('nickname_' + id, function(nickname) {
          $nickname.empty().append(nickname.escapeHTML());
        });

        var $chatlog = $('<ul>').addClass('chatlog');

        var $clear_log = $('<a>')
          .attr('href', 'javascript:void(0)')
          .append('Clear log')
          .click(function() {
            clearRecordedLog(id);
            $chatlog.empty();
          });

        var $c = $('<div>')
          .hide()
          .addClass('page')
          .attr('page', id)
          .append($('<h3>')
            .append('Conversation with ')
            .append($nickname)
          )
          .append($clear_log)
          .append($chatlog)
          .append(
            $('<div>')
            .attr('id', 'input-wrap')
            .append($input)
            .append($addimage)
            .append($file)
          );

        $('#contents').append($c);
        updateFriendProfile(id);

        log = loadRecordedLog(id);
        for (var i = 0; i < log.length; i++) {
          addChatLog(id, log[i].from, log[i].msg, log[i].date);
        }

        if (location.hash == "#" + id) {
          activatePage(id);
        }
      }

      $('#add-friend a').click(function() {
        var id = window.prompt("Please input ID", "");
        if (id != null) {
          addChatPage(id);
          invoke('AddFriend', id);
        }
      });

      $('#toggle-status').click(function() {
        var $a = $(this);
        if ($a.text() == 'Active') {
          $a.text('Away');
          invoke("SetStatus", "away");
        } else {
          $a.text('Active');
          invoke("SetStatus", "active");
        }
      });

      $('#settings').submit(function() {
        var nickname = $('#settings input[name=nickname]').val();
        var data = $('#settings .my-avatar').data('src');
        var avatar = data.substr(data.indexOf(',') + 1);
        invoke('SetProfile', nickname, avatar, function() {
          updateSelfProfile();
          var $button = $('#submit-profile');
          $button.val('OK');
          setTimeout(function() {
            $button.val('Update');
          }, 500);
        });
        return false;
      });

      $('#settings input[name=avatar]').change(function(e) {
        var files = e.target.files;
        for (var i = 0, f; f = files[i]; i++) {
          if (f.type.match('image.*')) {
            var reader = new FileReader();

            var $input = $(this);
            reader.onload = (function(theFile) {
              return function(e) {
                var data = e.target.result;
                $('#settings .my-avatar').attr('src', data);
                $('#settings .my-avatar').data('src', data);
              };
            })(f);

            reader.readAsDataURL(f);
          }
        }
      });

      $('div.page').hide();

      var hash = location.hash;
      activatePage('settings');
      location.hash = hash;

    });
  </script>
  <div id="sidebar">
    <h2><i class="fa fa-heart"></i> Friends</h2>
    <ul id="friend-list">
      <li id="add-friend"><i class="fa fa-plus-circle"></i>  <a href="javascript:void(0)">Add friend</a>
      </li>
    </ul>
    <h2><i class="fa fa-cogs"></i> Account</h2>
    <ul>
      <li class="item"><a href="javascript:void(0)" page="settings">Settings</a>
      </li>
    </ul>
  </div>
  <div id="contents">
    <div class="page" page="settings">
      <h3>Settings</h3>
      <form id="settings">
        <ul>
          <li>
            <label>Nickname:
              <input type="text" name="nickname">
            </label>
          </li>
          <li>
            <label>Avatar:
              <img class="my-avatar" width="16" height="16">
              <input type="file" name="avatar">
            </label>
          </li>
          <li>
            <input id="submit-profile" type="submit" value="Update" width="100">
          </li>
        </ul>
      </form>
    </div>
  </div>
</body>

</html>
